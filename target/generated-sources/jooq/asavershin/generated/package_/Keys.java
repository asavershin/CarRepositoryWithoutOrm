/*
 * This file is generated by jOOQ.
 */
package asavershin.generated.package_;


import asavershin.generated.package_.tables.Autoservice;
import asavershin.generated.package_.tables.Car;
import asavershin.generated.package_.tables.Person;
import asavershin.generated.package_.tables.records.AutoserviceRecord;
import asavershin.generated.package_.tables.records.CarRecord;
import asavershin.generated.package_.tables.records.PersonRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AutoserviceRecord> AUTOSERVICE_PKEY = Internal.createUniqueKey(Autoservice.AUTOSERVICE, DSL.name("autoservice_pkey"), new TableField[] { Autoservice.AUTOSERVICE.AUTOSERVICE_ID }, true);
    public static final UniqueKey<CarRecord> CAR_CAR_EVP_KEY = Internal.createUniqueKey(Car.CAR, DSL.name("car_car_evp_key"), new TableField[] { Car.CAR.CAR_EVP }, true);
    public static final UniqueKey<CarRecord> CAR_PKEY = Internal.createUniqueKey(Car.CAR, DSL.name("car_pkey"), new TableField[] { Car.CAR.CAR_ID }, true);
    public static final UniqueKey<PersonRecord> PERSON_PKEY = Internal.createUniqueKey(Person.PERSON, DSL.name("person_pkey"), new TableField[] { Person.PERSON.PERSON_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CarRecord, AutoserviceRecord> CAR__FK_CAR_AUTOSERVICE = Internal.createForeignKey(Car.CAR, DSL.name("fk_car_autoservice"), new TableField[] { Car.CAR.AUTOSERVICE_ID }, Keys.AUTOSERVICE_PKEY, new TableField[] { Autoservice.AUTOSERVICE.AUTOSERVICE_ID }, true);
    public static final ForeignKey<CarRecord, PersonRecord> CAR__FK_CAR_PERSON = Internal.createForeignKey(Car.CAR, DSL.name("fk_car_person"), new TableField[] { Car.CAR.PERSON_ID }, Keys.PERSON_PKEY, new TableField[] { Person.PERSON.PERSON_ID }, true);
}
